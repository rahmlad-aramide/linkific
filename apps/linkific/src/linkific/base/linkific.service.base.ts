/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Linkific } from "@prisma/client";

export class LinkificServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LinkificCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LinkificCountArgs>
  ): Promise<number> {
    return this.prisma.linkific.count(args);
  }

  async linkifics<T extends Prisma.LinkificFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.LinkificFindManyArgs>
  ): Promise<Linkific[]> {
    return this.prisma.linkific.findMany(args);
  }
  async linkific<T extends Prisma.LinkificFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.LinkificFindUniqueArgs>
  ): Promise<Linkific | null> {
    return this.prisma.linkific.findUnique(args);
  }
  async createLinkific<T extends Prisma.LinkificCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LinkificCreateArgs>
  ): Promise<Linkific> {
    return this.prisma.linkific.create<T>(args);
  }
  async updateLinkific<T extends Prisma.LinkificUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LinkificUpdateArgs>
  ): Promise<Linkific> {
    return this.prisma.linkific.update<T>(args);
  }
  async deleteLinkific<T extends Prisma.LinkificDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.LinkificDeleteArgs>
  ): Promise<Linkific> {
    return this.prisma.linkific.delete(args);
  }
}
